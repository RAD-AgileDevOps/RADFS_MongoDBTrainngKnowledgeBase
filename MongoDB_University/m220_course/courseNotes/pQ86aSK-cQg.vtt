WEBVTT

1
00:00:00.000 --> 00:00:03.860
In this lesson, we'll go over
the application architecture

2
00:00:03.860 --> 00:00:06.620
for the mflix application.

3
00:00:06.620 --> 00:00:09.770
Here is an overview of the
structure using the tree

4
00:00:09.770 --> 00:00:12.040
command in my terminal.

5
00:00:12.040 --> 00:00:16.280
The README.rst file contains
detailed instructions

6
00:00:16.280 --> 00:00:19.670
for setting up your environment
as well as information

7
00:00:19.670 --> 00:00:22.450
about the layout of the project.

8
00:00:22.450 --> 00:00:25.880
The data directory contains
all of the source data

9
00:00:25.880 --> 00:00:29.925
we'll be using for
the mflix application.

10
00:00:29.925 --> 00:00:34.450
The dotini file here will
be modified and renamed

11
00:00:34.450 --> 00:00:38.580
by you in this course, and it's
going to contain information

12
00:00:38.580 --> 00:00:41.260
so that the application
can connect to your Atlas

13
00:00:41.260 --> 00:00:43.600
cluster, as well as
other information

14
00:00:43.600 --> 00:00:45.850
that the application
will use internally.

15
00:00:45.850 --> 00:00:47.690
More on that later.

16
00:00:47.690 --> 00:00:51.310
There are two directories
under the mflix directory--

17
00:00:51.310 --> 00:00:54.310
api and build.

18
00:00:54.310 --> 00:00:58.480
Api contains some flask root
handlers for the application,

19
00:00:58.480 --> 00:01:01.750
and build contains the
front end application.

20
00:01:01.750 --> 00:01:03.550
Both of these are
completed for you

21
00:01:03.550 --> 00:01:05.980
to allow you to focus
solely on learning

22
00:01:05.980 --> 00:01:09.740
to use PyMongo with MongoDB.

23
00:01:09.740 --> 00:01:15.020
One note-- a few sections will
have you edit the index style

24
00:01:15.020 --> 00:01:17.690
HTML file if necessary.

25
00:01:17.690 --> 00:01:23.670
You can find it under and
mflix, build, index.html.

26
00:01:23.670 --> 00:01:28.240
The db.py file is where most
of your effort will be focused.

27
00:01:28.240 --> 00:01:30.060
It contains all of
the methods that

28
00:01:30.060 --> 00:01:32.250
interact with the database.

29
00:01:32.250 --> 00:01:34.590
Initially, most of
these would just

30
00:01:34.590 --> 00:01:37.860
be stubs that you will have
to fill out with the required

31
00:01:37.860 --> 00:01:39.240
functionality.

32
00:01:39.240 --> 00:01:42.420
You do not need to have MongoDB
installed, as you'll be using

33
00:01:42.420 --> 00:01:45.750
your own MongoDB Atlas cluster.

34
00:01:45.750 --> 00:01:48.510
Factory.py contains
functionality

35
00:01:48.510 --> 00:01:51.720
that assembles the FOS
application for running.

36
00:01:51.720 --> 00:01:54.610
You don't have to
modify this file.

37
00:01:54.610 --> 00:02:00.090
Lastly, the tests directory
contains all of the unit tests.

38
00:02:00.090 --> 00:02:02.640
Throughout the course,
you'll be presented with labs

39
00:02:02.640 --> 00:02:04.470
that we call tickets.

40
00:02:04.470 --> 00:02:08.020
These will contain a user story
or some other instructions,

41
00:02:08.020 --> 00:02:10.830
along with instructions for
running the particular test

42
00:02:10.830 --> 00:02:12.960
suite for that ticket.

43
00:02:12.960 --> 00:02:14.550
Once all of the
tests are passing

44
00:02:14.550 --> 00:02:16.560
for that particular
task, you'll go

45
00:02:16.560 --> 00:02:20.460
to the status page and the UI.

46
00:02:20.460 --> 00:02:23.440
And that sums up the
application architecture.

47
00:02:23.440 --> 00:02:27.090
Remember to read
the README.rst file,

48
00:02:27.090 --> 00:02:30.840
as it contains detailed
setup instructions.

49
00:02:30.840 --> 00:02:33.870
The API layer that
handles requests

50
00:02:33.870 --> 00:02:36.480
when the application is
running is implemented

51
00:02:36.480 --> 00:02:39.600
in movies.py and user.py.

52
00:02:39.600 --> 00:02:43.050
Feel free to look at these
files, but do not modify them,

53
00:02:43.050 --> 00:02:47.510
as doing so may prevent the
UI from validating correctly.

54
00:02:47.510 --> 00:02:50.430
Db.py is where all
of the methods that

55
00:02:50.430 --> 00:02:53.040
interact with Atlas
are located and where

56
00:02:53.040 --> 00:02:57.280
you will be doing all
of your implementation.

57
00:02:57.280 --> 00:03:00.510
The tests directory contains
all of the unit tests.

58
00:03:00.510 --> 00:03:02.670
Make sure you read
them to see what is

59
00:03:02.670 --> 00:03:04.900
being passed into the methods.

60
00:03:04.900 --> 00:03:06.840
We also highly
recommend that you

61
00:03:06.840 --> 00:03:10.530
focus on making one
test pass at a time.

62
00:03:10.530 --> 00:03:13.670
If there are four or five unit
tests within the test file,

63
00:03:13.670 --> 00:03:17.280
write enough functionality
to make one test pass.

64
00:03:17.280 --> 00:03:20.550
Trying to make all of the
tests pass on your first try

65
00:03:20.550 --> 00:03:23.810
can lead to a lot
of frustration.