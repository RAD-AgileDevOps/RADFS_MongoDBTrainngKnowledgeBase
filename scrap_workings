C:\RAD Financial Systems_new\R_Programming\Tutorialspoint_Course\R Interfaces\x_m_L\employee.xml



install.packages("XML", type = "binary")
require(XML)
# Also load the other required package.
library("methods")

# Give the input file name to the function.
result <- xmlParse(file = "C:\\RAD Financial Systems_new\\R_Programming\\Tutorialspoint_Course\\R Interfaces\\x_m_L\\employee.xml")

# Print the result.
print(result)


# Load the package required to read JSON files.
library("rjson")

# Give the input file name to the function.
result <- fromJSON(file = "C:\\Databases\\MongoDB\\ecdcCOVID19_20200624.json")

# Print the result.
print(result)


# Load the package required to read JSON files.
library("rjson")

# Give the input file name to the function.
result <- fromJSON(file = "C:\\RAD Financial Systems_new\\R_Programming\\Tutorialspoint_Course\\R Interfaces\\x_m_L\\rDemo_ecdcCOVID19_20200706.json")

# Convert JSON file to a data frame.
json_data_frame <- as.data.frame(result)

print(json_data_frame)





# Load the package required to read JSON files.
library("rjson")

# Give the input file name to the function.
result <- fromJSON(file = "C:\\Databases\\MongoDB\\ecdcCOVID19_20200706.json")

# Convert JSON file to a data frame.
json_data_frame <- as.data.frame(result)

print(json_data_frame)



# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May","Jun","Jul")
regions <- c("East","West","North")

# Create the matrix of the values.
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow = 3, ncol = 5, byrow = TRUE)

# Give the chart file a name
png(file = "C:\\RAD Financial Systems_new\\R_Programming\\Tutorialspoint_Course\\charting\\barcharts_\\barchart_stacked.png")

# Create the bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)

# Add the legend to the chart
legend("topleft", regions, cex = 1.3, fill = colors)

# Save the file
dev.off()


# Give the chart file a name.
jpg(file = "boxplot_with_notch.jpg")

# Plot the chart.
boxplot(mpg ~ cyl, data = mtcars, 
   xlab = "Number of Cylinders",
   ylab = "Miles Per Gallon", 
   main = "Mileage Data",
   notch = TRUE, 
   varwidth = TRUE, 
   col = c("green","yellow","purple"),
   names = c("High","Medium","Low")
)
# Save the file.
dev.off()

